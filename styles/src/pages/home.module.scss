@use "sass:math";
@use "../scss-utils/css";
@use "../breakpoint";
@use "../color";
@use "../layout";
@use "../mixins";
@use "../spacing";
@use "../text";
@use "../components/header.module" as header;

$_homepage-assets-path: "/static/pages/home";
$_hero-bg-filename: "hero-bg.png";

.homepage {
  /* empty for now */

  &__hero {
    width: 100%;
    min-height: 100vh;
    background: center / 100% 100% no-repeat url(#{$_homepage-assets-path}/#{$_hero-bg-filename});
    margin-top: -1 * header.$header-height;
    @include spacing.section-padding($top: spacing.get(4) + header.$header-height); // additionally pad by header height, to offset the negative margin.
    display: flex;
    align-items: center;
    justify-content: center;
    
    &__content {
      @include layout.article;
      display: flex;
      flex-direction: column;
      align-items: center;

      &__text {
        display: flex;
        flex-direction: column;
        align-items: center;
      }

      &__title {
        @include text.monospace;
      }

      &__quote {
        margin-top: spacing.get(1);
        @include text.family(display);
        @include text.size(title);
        @include text.weight(bold);
        text-align: center;
        line-height: 1.5;
      }
    }

    &__content &__button {
      margin-top: spacing.get(3);
    }

    &__button {
      @include color.button(color.get(text, dark), color.get(background, light));

      &:hover {
        @include color.button($background: color.get(surface, light));
      }
    }
  }

  &__topics {
    @include layout.article($pad: false);
    display: flex;
    flex-direction: column;
    justify-content: center;

    &__topic {
      display: flex;
      flex-flow: row wrap;
      justify-content: center;

      &:nth-child(2n) {
        flex-flow: row-reverse wrap;
      }

      &--sustainability {
        --homepage-topics-panel-overline-color: #{color.get(theme, sustainability)};
      }
      &--humanity-centered-design {
        --homepage-topics-panel-overline-color: #{color.get(theme, humanity-centered-design)};
      }
      &--human-behavior {
        --homepage-topics-panel-overline-color: #{color.get(theme, human-behavior)};
      }
      &--meaning {
        --homepage-topics-panel-overline-color: #{color.get(theme, meaning)};
      }

      &__panel {
        flex: 1 1 auto;

        $_panel-min-size: math.div(breakpoint.get-rem(desktop-lg), 3);

        &--content {
          flex-basis: $_panel-min-size;
          display: flex;
          flex-direction: column;
          align-items: flex-start;
          justify-content: center;
          gap: 2rem;
          @include spacing.section-padding;
        }

        &--image {
          width: 50%;
          max-width: max($_panel-min-size, 50%);
          object-fit: cover;
          aspect-ratio: 1 / 1;
        }
      }

      &__content {
        &__text {
          &__heading {
            @include text.overline;
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1rem;
            color: var(--homepage-topics-panel-overline-color);
          }
        }

        &__button {
          @include color.button(color.get(text, light));
          border: spacing.get(px, 1) solid color.get(text, white);

          &:hover {
            @include color.button($background: color.get(surface, dark));
          }
        }
      }
    }
  }

  &__resources {
    @include color.text(text, dark);
    @include color.background(surface, light);
    
    &__article {
      @include layout.article;
      @include spacing.section-padding;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: spacing.get(4);
    }

    &__heading {
      /* empty for now */
    }

    &__cards {
      width: 100%;
      display: flex;
      justify-content: center;
      flex-wrap: wrap;
      gap: spacing.get(1);

      &__card {
        /* empty for now */
      }
    }

    &__button {
      @include color.button(color.get(text, light), color.get(background, dark));

      &:hover {
        @include color.button($background: color.get(surface, dark));
      }
    }
  }
}